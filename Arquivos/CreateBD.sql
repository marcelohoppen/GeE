/******************************************************************************/
/***          Generated by IBExpert 2012.02.21 12/10/2023 20:30:42          ***/
/******************************************************************************/

SET SQL DIALECT 3;

SET NAMES WIN1252;

CREATE DATABASE 'c:\GeE\BD.FDB'
USER 'SYSDBA' PASSWORD 'masterkey'
PAGE_SIZE 16384
DEFAULT CHARACTER SET WIN1252 COLLATION WIN_PTBR;



/******************************************************************************/
/***                               Generators                               ***/
/******************************************************************************/

CREATE GENERATOR GIDAREACONHECIMENTO;
SET GENERATOR GIDAREACONHECIMENTO TO 0;

CREATE GENERATOR GIDCURSOS;
SET GENERATOR GIDCURSOS TO 1;

CREATE GENERATOR GIDDIAGRAM;
SET GENERATOR GIDDIAGRAM TO 0;

CREATE GENERATOR GIDDIAGRAMANALGESIA;
SET GENERATOR GIDDIAGRAMANALGESIA TO 0;

CREATE GENERATOR GIDDIAGRAMANALGESICO;
SET GENERATOR GIDDIAGRAMANALGESICO TO 0;

CREATE GENERATOR GIDDIAGRAMANESTESICO;
SET GENERATOR GIDDIAGRAMANESTESICO TO 0;

CREATE GENERATOR GIDDIAGRAMCOLABORADORES;
SET GENERATOR GIDDIAGRAMCOLABORADORES TO 10;

CREATE GENERATOR GIDDIAGRAMESPECIES;
SET GENERATOR GIDDIAGRAMESPECIES TO 1;

CREATE GENERATOR GIDDIAGRAMEXPOSICAO;
SET GENERATOR GIDDIAGRAMEXPOSICAO TO 0;

CREATE GENERATOR GIDDIAGRAMRELMUSC;
SET GENERATOR GIDDIAGRAMRELMUSC TO 0;

CREATE GENERATOR GIDESPECIES;
SET GENERATOR GIDESPECIES TO 0;

CREATE GENERATOR GIDFARMACOS;
SET GENERATOR GIDFARMACOS TO 0;

CREATE GENERATOR GIDPESSOAS;
SET GENERATOR GIDPESSOAS TO 3;

CREATE GENERATOR GIDPROCEDENCIA;
SET GENERATOR GIDPROCEDENCIA TO 0;



/******************************************************************************/
/***                                 Tables                                 ***/
/******************************************************************************/



CREATE TABLE ALLOCATION (
    ID                       INTEGER NOT NULL,
    DIAGRAM                  INTEGER NOT NULL,
    DESCRIPTION              BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    RANDOMISATION_STRATEGY   VARCHAR(40),
    RAND_STRATEGY_IF_OTHER   VARCHAR(100),
    WHAT_IS_RANDOMISED       VARCHAR(40),
    RANDOMISATION_PROCEDURE  VARCHAR(30),
    RAND_PROCEDURE_IF_OTHER  VARCHAR(100),
    BLIND_ALLOCATION         VARCHAR(60),
    REASON_FOR_NOT_BLINDING  VARCHAR(100),
    ADDITIONAL_INFORMATION   VARCHAR(100),
    TEXT                     VARCHAR(100),
    RESOURCEID               VARCHAR(50)
);


CREATE TABLE ANALYSIS (
    ID                             INTEGER NOT NULL,
    DIAGRAM                        INTEGER NOT NULL,
    DESCRIPTION                    BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    PLANNED_METHOD_OF_ANALYSIS     VARCHAR(70),
    PLANNED_METHOD_OF_ANAL_OTHER   VARCHAR(100),
    POST_HOC_TEST                  VARCHAR(100),
    MULTIPLE_TESTING_CORRECTION    VARCHAR(100),
    STATIST_ASSUMPT_ASSESSED_BY    VARCHAR(100),
    BLIND_ANALYSIS                 VARCHAR(60),
    REASON_FOR_NOT_BLINDING        VARCHAR(100),
    IS_PRIMARY_ANALYSIS            VARCHAR(10),
    STATISTICAL_PACKAGE_USED       VARCHAR(100),
    P_VALUE_CALCULATION            VARCHAR(100),
    ADDITIONAL_INFORMATION         VARCHAR(100),
    METHOD_ANALYSIS_USED           VARCHAR(70),
    METHOD_ANALYSIS_USED_IF_OTHER  VARCHAR(100),
    REASON_NOT_USING_PLAN_METHOD   VARCHAR(100),
    TEXT                           VARCHAR(100),
    RESOURCEID                     VARCHAR(50)
);


CREATE TABLE ANIMAL (
    ID                          INTEGER NOT NULL,
    DIAGRAM                     INTEGER NOT NULL,
    DESCRIPTION                 BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    SPECIES                     VARCHAR(50),
    SPECIES_IF_OTHER            VARCHAR(100),
    STRAIN                      VARCHAR(100),
    STRAIN_TYPE                 VARCHAR(10),
    SEX                         VARCHAR(15),
    AGE_MEAN                    NUMERIC(18,4),
    AGE_RANGE                   VARCHAR(100),
    AGE_UNIT                    VARCHAR(10),
    AGE_UNIT_IF_OTHER           VARCHAR(100),
    WEIGHT_MEAN                 NUMERIC(18,4),
    WEIGHT_RANGE                VARCHAR(100),
    WEIGHT_UNIT                 VARCHAR(10),
    WEIGHT_UNIT_IF_OTHER        VARCHAR(100),
    GENETIC_BACKGROUND          VARCHAR(100),
    PREVIOUS_PROCEDURES         VARCHAR(100),
    NUMBER_OF_ANIMALS_PER_CAGE  VARCHAR(100),
    SUPPLIER                    VARCHAR(100),
    ADDITIONAL_INFORMATION      VARCHAR(100),
    TEXT                        VARCHAR(100),
    RESOURCEID                  VARCHAR(50)
);


CREATE TABLE AREACONHECIMENTO (
    ID         INTEGER NOT NULL,
    NOME       VARCHAR(100),
    NOMEBUSCA  VARCHAR(100)
);


CREATE TABLE CURSOS (
    ID         INTEGER NOT NULL,
    NOME       VARCHAR(50),
    NOMEBUSCA  VARCHAR(50)
);


CREATE TABLE DATA_TRANSFORMATION (
    ID                          INTEGER NOT NULL,
    DIAGRAM                     INTEGER NOT NULL,
    DESCRIPTION                 BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    OUTCOME_EXPRESSED_AS        VARCHAR(40),
    TRANSFORMATION_IF_OTHER     VARCHAR(100),
    DATA_TRANSFORMATION         VARCHAR(15),
    ADDITIONAL_INFORMATION      VARCHAR(100),
    OUTCOME_EXPRESSED_AS_OTHER  VARCHAR(200),
    TEXT                        VARCHAR(200),
    TRANSF_TO_NORMALISE_DATA    VARCHAR(200),
    RESOURCEID                  VARCHAR(50)
);


CREATE TABLE DIAGRAM (
    ID                             INTEGER NOT NULL,
    URL                            VARCHAR(500),
    TITLE                          VARCHAR(500),
    TITLEBUSCA                     VARCHAR(500),
    RESOURCEID                     VARCHAR(50),
    DATAINICIO                     TIMESTAMP,
    DATATERMINO                    TIMESTAMP,
    RESPONSAVEL                    INTEGER,
    AREACONHECIMENTO               INTEGER,
    RESUMO                         BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    OBJETIVOS                      BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    JUSTIFICATIVA                  BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    RELEVANCIA                     BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    RESPEXPPREVIA                  VARCHAR(3),
    RESPEXPPREVIATEMPO             VARCHAR(50),
    RESPTREINAMENTO                VARCHAR(3),
    RESPTREINAMENTOTEMPO           VARCHAR(50),
    RESPVINCULOINSTITUICAO         VARCHAR(50),
    JUSTNAOMETALT                  BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    ANIMAISPROCEDENCIA             INTEGER,
    ANIMAISSILVESTRE               VARCHAR(3),
    ANIMAISSISBIO                  VARCHAR(30),
    ANIMAISOUTRAPROCED             VARCHAR(3),
    ANIMAISOUTRAPROCEDDESC         VARCHAR(100),
    ANIMAISGENETMODF               VARCHAR(3),
    ANIMAISQCB                     VARCHAR(30),
    METODOCAPTURA                  BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    PLANEJAMENTO                   BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    GRAUINVASIVIDADE               VARCHAR(100),
    REUSOBIOLOGICO                 VARCHAR(3),
    REUSOBIOLOGICODESCRICAO        VARCHAR(100),
    NUMEROPROTOCOLOCEUA            VARCHAR(30),
    ALIMENTACAO                    VARCHAR(50),
    FONTEAGUA                      VARCHAR(50),
    EXAUSTAOAR                     VARCHAR(50),
    LOTACAO                        VARCHAR(50),
    DEMAISCONDICOES                VARCHAR(100),
    LOCALMANTIDOANIMAL             BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    ALOJAMENTOTIPO                 VARCHAR(20),
    ALOJAMENTOTIPOOUTROS           VARCHAR(100),
    ALOJAMENTOANIMAISGAIOLA        INTEGER,
    ALOJAMENTOTIPOCAMA             VARCHAR(100),
    ALOJAMENTOOUTRASINFO           VARCHAR(100),
    ALOJAMENTOENRIQAMB             VARCHAR(100),
    PROCESTRESSE                   VARCHAR(3),
    PROCDURACAO                    VARCHAR(10),
    PROCESTRESSEJUSTIFICATIVA      VARCHAR(100),
    PROCESTRESSEDESCRICAO          VARCHAR(100),
    PROCDORDESCRICAO               VARCHAR(100),
    PROCRESTRICAOHIDRICAALIMENTAR  VARCHAR(100),
    PROCOUTROS                     VARCHAR(100),
    ANESTESICOSUSOJUSTIFICATIVA    VARCHAR(100),
    ANESTESICOSUSO                 VARCHAR(3),
    RELAXANTEMUSCULARUSO           VARCHAR(3),
    RELAXANTEMUSCULARUSOJUST       VARCHAR(100),
    ANALGESICOSUSO                 VARCHAR(3),
    ANALGESICOSUSOJUSTIFICATIVA    VARCHAR(100),
    IMOBILIZACAOANIMAL             VARCHAR(3),
    IMOBILIZACAOANIMALTIPO         VARCHAR(100),
    JEJUM                          VARCHAR(3),
    JEJUMDURACAO                   VARCHAR(100),
    RESTRICAOHIDRICA               VARCHAR(3),
    RESTRICAOHIDRICADURACAO        VARCHAR(100),
    CIRURGIA                       VARCHAR(3),
    CIRURGIATIPO                   VARCHAR(15),
    CIRURGIAQUAIS                  VARCHAR(100),
    CIRURGIAATOS                   VARCHAR(100),
    OBSERVACAORECUPERACAO          VARCHAR(3),
    OBSERVACAORECUPERACAOPERIODO   VARCHAR(100),
    OUTROSCUIDPOSOP                VARCHAR(3),
    OUTROSCUIDPOSOPDESC            VARCHAR(100),
    EXTRACAOBIOLOGICOS             VARCHAR(3),
    EXTBIOLMATERIAL                VARCHAR(100),
    EXTBIOLQTDAMOSTRA              VARCHAR(100),
    EXTBIOLFREQUENCIA              VARCHAR(100),
    EXTBIOLMETODOCOLETA            VARCHAR(100),
    PONTOFINALHUMANITARIO          VARCHAR(100),
    EDMETODOEUTANASIA              VARCHAR(100),
    SUBSTANCIAEUTANASIA            VARCHAR(100),
    JUSTIFICATIVAEUTANASIA         VARCHAR(100),
    DESTINOANIMAIS                 VARCHAR(100),
    FORMADESCARTE                  VARCHAR(100),
    VETERINARIOEUTANASIA           VARCHAR(100),
    RESUMOPROCEDIMENTOS            BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    ANALGESIAUSO                   VARCHAR(3),
    ANALGESIAUSOJUSTIFICATIVA      VARCHAR(100),
    EXPOSICAO                      VARCHAR(3),
    METODOEUTANASIA                VARCHAR(100),
    TEMCIRURGIA                    VARCHAR(3),
    TEMEUTANASIA                   VARCHAR(3),
    TEMMEDICAMENTOS                VARCHAR(3),
    TEMCOLETASANGUE                VARCHAR(3),
    NUMCOLETASSANGUE               INTEGER,
    VOLCOLETASANGUE                NUMERIC(14,8),
    VOLCOLETASANGUEUND             VARCHAR(5),
    VIACOLETASSANGUE               VARCHAR(20)
);


CREATE TABLE DIAGRAMANALGESIA (
    ID                INTEGER NOT NULL,
    DIAGRAM           INTEGER NOT NULL,
    ANALGESIA         INTEGER NOT NULL,
    DOSE              VARCHAR(100),
    VIAADMINISTRACAO  VARCHAR(100),
    FREQUENCIA        VARCHAR(100)
);


CREATE TABLE DIAGRAMANALGESICOS (
    ID                INTEGER NOT NULL,
    DIAGRAM           INTEGER NOT NULL,
    ANALGESICO        INTEGER NOT NULL,
    DOSE              VARCHAR(100),
    VIAADMINISTRACAO  VARCHAR(100),
    FREQUENCIA        VARCHAR(100)
);


CREATE TABLE DIAGRAMANESTESICOS (
    ID                INTEGER NOT NULL,
    DIAGRAM           INTEGER NOT NULL,
    ANESTESICO        INTEGER NOT NULL,
    DOSE              VARCHAR(100),
    VIAADMINISTRACAO  VARCHAR(100),
    FREQUENCIA        VARCHAR(100)
);


CREATE TABLE DIAGRAMCOLABORADORES (
    ID           INTEGER NOT NULL,
    DIAGRAM      INTEGER NOT NULL,
    COLABORADOR  INTEGER NOT NULL
);


CREATE TABLE DIAGRAMESPECIES (
    ID          INTEGER NOT NULL,
    ESPECIE     INTEGER NOT NULL,
    LINHAGEM    VARCHAR(30),
    IDADE       VARCHAR(30),
    PESO        VARCHAR(30),
    MACHOS      INTEGER,
    FEMEAS      INTEGER,
    TOTAL       INTEGER,
    DIAGRAM     INTEGER NOT NULL,
    RESOURCEID  VARCHAR(50)
);


CREATE TABLE DIAGRAMEXPOSICAO (
    ID                INTEGER NOT NULL,
    DIAGRAM           INTEGER NOT NULL,
    EXPOSICAO         INTEGER NOT NULL,
    DOSE              VARCHAR(100),
    VIAADMINISTRACAO  VARCHAR(100),
    FREQUENCIA        VARCHAR(100)
);


CREATE TABLE DIAGRAMRELMUSC (
    ID                INTEGER NOT NULL,
    DIAGRAM           INTEGER NOT NULL,
    RELMUSC           INTEGER NOT NULL,
    DOSE              VARCHAR(100),
    VIAADMINISTRACAO  VARCHAR(100),
    FREQUENCIA        VARCHAR(100)
);


CREATE TABLE ESPECIES (
    ID         INTEGER NOT NULL,
    NOME       VARCHAR(100),
    NOMEBUSCA  VARCHAR(100),
    NOMEEDA    VARCHAR(100),
    SIGLADOC   VARCHAR(10)
);


CREATE TABLE EUTHANASIA (
    ID                      INTEGER NOT NULL,
    DIAGRAM                 INTEGER NOT NULL,
    DESCRIPTION             BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    METHOD_OF_EUTHANASIA    VARCHAR(100),
    TISSUES_COLLECTED       VARCHAR(100),
    TIMING                  VARCHAR(100),
    ADDITIONAL_INFORMATION  VARCHAR(100),
    RESOURCEID              VARCHAR(50)
);


CREATE TABLE EXPERIMENT (
    ID                             INTEGER NOT NULL,
    DIAGRAM                        INTEGER NOT NULL,
    DESCRIPTION                    BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    NULL_HYPOTHESIS                VARCHAR(100),
    ALTERNATIVE_HYPOTHESIS         VARCHAR(100),
    EFFECT_OF_INTEREST             VARCHAR(100),
    EFFECT_SIZE                    VARCHAR(100),
    JUSTIFICATION_FOR_EFFECT_SIZE  VARCHAR(100),
    APPROVAL_NUMBER                VARCHAR(100),
    ADDITIONAL_INFORMATION         VARCHAR(100),
    TEXT                           VARCHAR(100),
    RESOURCEID                     VARCHAR(50)
);


CREATE TABLE EXPERIMENTAL_UNIT (
    ID                          INTEGER NOT NULL,
    DIAGRAM                     INTEGER NOT NULL,
    DESCRIPTION                 BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    EXPERIMENTAL_UNIT_IS        VARCHAR(40),
    EXPERIMENTAL_UNIT_IF_OTHER  VARCHAR(100),
    ADDITIONAL_INFORMATION      VARCHAR(100),
    TEXT                        VARCHAR(100),
    RESOURCEID                  VARCHAR(50)
);


CREATE TABLE FARMACOS (
    ID                 INTEGER NOT NULL,
    NOME               VARCHAR(100),
    NOMEBUSCA          VARCHAR(100),
    ANALGESICO         VARCHAR(3),
    ANESTESICO         VARCHAR(3),
    RELAXANTEMUSCULAR  VARCHAR(3)
);


CREATE TABLE GRUPO (
    ID                             INTEGER NOT NULL,
    DIAGRAM                        INTEGER NOT NULL,
    DESCRIPTION                    BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    NUMBER_OF_ANIMALS              INTEGER,
    PLANNED_NUMBER_OF_EXP_UNITS    INTEGER,
    JUSTIFICATION_FOR_SAMPLE_SIZE  VARCHAR(100),
    ACTUAL_NUMBER_OF_EXP_UNITS     INTEGER,
    ROLE_IN_EXPERIMENT             VARCHAR(20),
    ROLE_IF_OTHER                  VARCHAR(100),
    ADDITIONAL_INFORMATION         VARCHAR(100),
    TEXT                           VARCHAR(100),
    RESOURCEID                     VARCHAR(50)
);


CREATE TABLE INSTITUICAO (
    ID    INTEGER NOT NULL,
    NOME  VARCHAR(100)
);


CREATE TABLE MEASUREMENT (
    ID                       INTEGER NOT NULL,
    DIAGRAM                  INTEGER NOT NULL,
    DESCRIPTION              BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    TIMING                   VARCHAR(100),
    BLIND_MEASUREMENT        VARCHAR(60),
    REASON_FOR_NOT_BLINDING  VARCHAR(100),
    ADDITIONAL_INFORMATION   VARCHAR(100),
    TEXT                     VARCHAR(100),
    RESOURCEID               VARCHAR(50)
);


CREATE TABLE NUISANCE_VARIABLE (
    ID                             INTEGER NOT NULL,
    DIAGRAM                        INTEGER NOT NULL,
    DESCRIPTION                    BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    CONTINUOUS_OR_CATEGORICAL      VARCHAR(40),
    HOW_IS_VARIABLE_ACCOUNTED_FOR  VARCHAR(25),
    ALLOC_EXP_UNITS_VAR_CAT        VARCHAR(60),
    ADDITIONAL_INFORMATION         VARCHAR(100),
    TEXT                           VARCHAR(100),
    RESOURCEID                     VARCHAR(50)
);


CREATE TABLE OBJECT (
    ID          INTEGER NOT NULL,
    DIAGRAM     INTEGER NOT NULL,
    NAMEID      VARCHAR(50),
    RESOURCEID  VARCHAR(50),
    TYPEOBJECT  INTEGER NOT NULL,
    FATHER      VARCHAR(50)
);


CREATE TABLE OTHER_INTERVENTION (
    ID                       INTEGER NOT NULL,
    DIAGRAM                  INTEGER NOT NULL,
    DESCRIPTION              BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    DETAILS                  VARCHAR(100),
    POSSIBLE_ADVERSE_EFFECT  VARCHAR(100),
    TIMING                   VARCHAR(100),
    ADDITIONAL_INFORMATION   VARCHAR(100),
    TEXT                     VARCHAR(300),
    RESOURCEID               VARCHAR(50)
);


CREATE TABLE OUTCOME_MEASURE (
    ID                              INTEGER NOT NULL,
    DIAGRAM                         INTEGER NOT NULL,
    DESCRIPTION                     BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    CONTINUOUS_OR_CATEGORICAL       VARCHAR(40),
    ANTICIPATED_STANDARD_DEVIATION  VARCHAR(100),
    IS_PRIMARY_OUTCOME_MEASURE      VARCHAR(10),
    ADDITIONAL_INFORMATION          VARCHAR(100),
    TEXT                            VARCHAR(100),
    RESOURCEID                      VARCHAR(50)
);


CREATE TABLE PATHOGEN_INFECTION (
    ID                       INTEGER NOT NULL,
    DIAGRAM                  INTEGER NOT NULL,
    DESCRIPTION              BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    MICROBIAL_AGENT          VARCHAR(100),
    DOSE_LOAD                VARCHAR(100),
    POSSIBLE_ADVERSE_EFFECT  VARCHAR(100),
    TIMING                   VARCHAR(100),
    ADDITIONAL_INFORMATION   VARCHAR(100),
    TEXT                     VARCHAR(100),
    RESOURCEID               VARCHAR(50)
);


CREATE TABLE PESSOAS (
    ID                 INTEGER NOT NULL,
    NOME               VARCHAR(100),
    VINCULO            VARCHAR(100),
    LINKLATTES         VARCHAR(100),
    TELEFONE           VARCHAR(100),
    EMAIL              VARCHAR(100),
    NOMEBUSCA          VARCHAR(100),
    CPF                VARCHAR(14),
    SEXO               VARCHAR(10),
    DATANASCIMENTO     TIMESTAMP,
    TREINAMENTOS       VARCHAR(100),
    NIVELACADEMICO     VARCHAR(100),
    EXPERIENCIADESDE   TIMESTAMP,
    PERFILPROFESSOR    VARCHAR(3),
    PERFILALUNO        VARCHAR(3),
    PERFILVETERINARIO  VARCHAR(3),
    INSTITUICAO        INTEGER,
    CURSO              INTEGER
);


CREATE TABLE PHARMACOLOGICAL_INTERVENTION (
    ID                               INTEGER NOT NULL,
    DIAGRAM                          INTEGER NOT NULL,
    DESCRIPTION                      BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    DRUG_AND_DOSE                    VARCHAR(100),
    MODE_OF_ADMINISTRATION           VARCHAR(25),
    MODE_OF_ADMINISTRATION_IF_OTHER  VARCHAR(100),
    ADVERSE_EFFECTS                  VARCHAR(100),
    TIMING                           VARCHAR(100),
    ADDITIONAL_INFORMATION           VARCHAR(100),
    TEXT                             VARCHAR(100),
    RESOURCEID                       VARCHAR(50)
);


CREATE TABLE PROCEDENCIA (
    ID           INTEGER NOT NULL,
    NOME         VARCHAR(100),
    NOMEBUSCA    VARCHAR(100),
    LOCALIZACAO  VARCHAR(100)
);


CREATE TABLE RELATIONSHIP (
    ID        INTEGER NOT NULL,
    OBJECT    INTEGER NOT NULL,
    DIAGRAM   INTEGER NOT NULL,
    INCOMING  VARCHAR(50),
    OUTGOING  VARCHAR(50)
);


CREATE TABLE REPEATED_MEASUREMENT (
    ID                       INTEGER NOT NULL,
    DIAGRAM                  INTEGER NOT NULL,
    DESCRIPTION              BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    NUMBER_OF_REPEATS        INTEGER,
    TIMING                   VARCHAR(100),
    BLIND_MEASUREMENT        VARCHAR(60),
    REASON_FOR_NOT_BLINDING  VARCHAR(100),
    ADDITIONAL_INFORMATION   VARCHAR(100),
    RESOURCEID               VARCHAR(50),
    TEXT                     VARCHAR(200)
);


CREATE TABLE SURGICAL_INTERVENTION (
    ID                               INTEGER NOT NULL,
    DIAGRAM                          INTEGER NOT NULL,
    DESCRIPTION                      BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    SURGICAL_PROCEDURE               VARCHAR(100),
    PRE_OP_ANALGESIA_REGIMEN         VARCHAR(100),
    POST_OP_ANALGESIA_REGIMEN        VARCHAR(100),
    ANAESTHETIC_USED                 VARCHAR(100),
    DURATION_OF_ANAESTHESIA_IN_MINS  INTEGER,
    SUCCESS_RATE_AS_PERCENTAGE       INTEGER,
    POSSIBLE_ADVERSE_EFFECT          VARCHAR(100),
    TIMMING                          VARCHAR(100),
    ADDITIONAL_INFORMATION           VARCHAR(100),
    TEXT                             VARCHAR(100),
    RESOURCEID                       VARCHAR(50)
);


CREATE TABLE TABDIV (
    ID           INTEGER NOT NULL,
    VERSAOBANCO  INTEGER
);


CREATE TABLE TYPEOBJECT (
    ID       INTEGER NOT NULL,
    NAME     VARCHAR(50),
    ISARROW  VARCHAR(1),
    ISNODE   VARCHAR(1)
);


CREATE TABLE VARIABLE_CATEGORY (
    ID                      INTEGER NOT NULL,
    DIAGRAM                 INTEGER NOT NULL,
    DESCRIPTION             BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    ADDITIONAL_INFORMATION  VARCHAR(100),
    TEXT                    VARCHAR(100),
    RESOURCEID              VARCHAR(50)
);


CREATE TABLE VARIABLE_OF_INTEREST (
    ID                         INTEGER NOT NULL,
    DIAGRAM                    INTEGER NOT NULL,
    DESCRIPTION                BLOB SUB_TYPE 1 SEGMENT SIZE 80,
    CONTINUOUS_OR_CATEGORICAL  VARCHAR(40),
    ALLOC_EXP_UNITS_VAR_CAT    VARCHAR(60),
    IS_REPEATED_FACTOR         VARCHAR(10),
    ADDITIONAL_INFORMATION     VARCHAR(100),
    TEXT                       VARCHAR(100),
    RESOURCEID                 VARCHAR(50)
);




/******************************************************************************/
/***                              Primary Keys                              ***/
/******************************************************************************/

ALTER TABLE ALLOCATION ADD CONSTRAINT PKALLOCATION PRIMARY KEY (ID);
ALTER TABLE ANALYSIS ADD CONSTRAINT PKANALYSIS PRIMARY KEY (ID);
ALTER TABLE ANIMAL ADD CONSTRAINT PKANIMAL PRIMARY KEY (ID);
ALTER TABLE AREACONHECIMENTO ADD CONSTRAINT PKAREACONHECIMENTO PRIMARY KEY (ID);
ALTER TABLE CURSOS ADD CONSTRAINT PKCURSOS PRIMARY KEY (ID);
ALTER TABLE DATA_TRANSFORMATION ADD CONSTRAINT PKDATA_TRANSFORMATION PRIMARY KEY (ID);
ALTER TABLE DIAGRAM ADD CONSTRAINT PKDIAGRAM PRIMARY KEY (ID);
ALTER TABLE DIAGRAMANALGESIA ADD CONSTRAINT PKDIAGRAMANALGESIA PRIMARY KEY (ID);
ALTER TABLE DIAGRAMANALGESICOS ADD CONSTRAINT PKDIAGRAMANALGESICOS PRIMARY KEY (ID);
ALTER TABLE DIAGRAMANESTESICOS ADD CONSTRAINT PKDIAGRAMFARMACOS PRIMARY KEY (ID);
ALTER TABLE DIAGRAMCOLABORADORES ADD CONSTRAINT PKDIAGRAMCOLABORADORES PRIMARY KEY (ID);
ALTER TABLE DIAGRAMESPECIES ADD CONSTRAINT PKDIAGRAMESPECIES PRIMARY KEY (ID);
ALTER TABLE DIAGRAMEXPOSICAO ADD CONSTRAINT PKDIAGRAMEXPOSICAO PRIMARY KEY (ID);
ALTER TABLE DIAGRAMRELMUSC ADD CONSTRAINT PKDIAGRAMRELMUSC PRIMARY KEY (ID);
ALTER TABLE ESPECIES ADD CONSTRAINT PKSEPECIES PRIMARY KEY (ID);
ALTER TABLE EUTHANASIA ADD CONSTRAINT PKEUTHANASIA PRIMARY KEY (ID);
ALTER TABLE EXPERIMENT ADD CONSTRAINT PKEXPERIMENT PRIMARY KEY (ID);
ALTER TABLE EXPERIMENTAL_UNIT ADD CONSTRAINT PKEXPERIMENTAL_UNIT PRIMARY KEY (ID);
ALTER TABLE FARMACOS ADD CONSTRAINT PKFARMACOS PRIMARY KEY (ID);
ALTER TABLE GRUPO ADD CONSTRAINT PKGRUPO PRIMARY KEY (ID);
ALTER TABLE INSTITUICAO ADD CONSTRAINT PKINSTITUICAO PRIMARY KEY (ID);
ALTER TABLE MEASUREMENT ADD CONSTRAINT PKMEASUREMENT PRIMARY KEY (ID);
ALTER TABLE NUISANCE_VARIABLE ADD CONSTRAINT PKNUISANCE_VARIABLE PRIMARY KEY (ID);
ALTER TABLE OBJECT ADD CONSTRAINT PKOBJECT PRIMARY KEY (ID);
ALTER TABLE OTHER_INTERVENTION ADD CONSTRAINT PKOTHER_INTERVENTION PRIMARY KEY (ID);
ALTER TABLE OUTCOME_MEASURE ADD CONSTRAINT PKOUTCOME_MEASURE PRIMARY KEY (ID);
ALTER TABLE PATHOGEN_INFECTION ADD CONSTRAINT PKPATHOGEN_INFECTION PRIMARY KEY (ID);
ALTER TABLE PESSOAS ADD CONSTRAINT PKPESSOAS PRIMARY KEY (ID);
ALTER TABLE PHARMACOLOGICAL_INTERVENTION ADD CONSTRAINT PKPHARMACOLOGICAL_INTERVENTION PRIMARY KEY (ID);
ALTER TABLE PROCEDENCIA ADD CONSTRAINT PKPROCEDENCIA PRIMARY KEY (ID);
ALTER TABLE RELATIONSHIP ADD CONSTRAINT PKRELATIONSHIP PRIMARY KEY (ID);
ALTER TABLE REPEATED_MEASUREMENT ADD CONSTRAINT PKREPEATED_MEASUREMENT PRIMARY KEY (ID);
ALTER TABLE SURGICAL_INTERVENTION ADD CONSTRAINT PKSURGICAL_INTERVENTION PRIMARY KEY (ID);
ALTER TABLE TABDIV ADD PRIMARY KEY (ID);
ALTER TABLE TYPEOBJECT ADD CONSTRAINT PKTYPEOBJECT PRIMARY KEY (ID);
ALTER TABLE VARIABLE_CATEGORY ADD CONSTRAINT PKVARIABLE_CATEGORY PRIMARY KEY (ID);
ALTER TABLE VARIABLE_OF_INTEREST ADD CONSTRAINT PKVARIABLE_OF_INTEREST PRIMARY KEY (ID);


/******************************************************************************/
/***                              Foreign Keys                              ***/
/******************************************************************************/

ALTER TABLE ALLOCATION ADD CONSTRAINT FKALLOCATION_DIAGRAM FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE ANALYSIS ADD FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE ANIMAL ADD FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE DATA_TRANSFORMATION ADD FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE DIAGRAM ADD CONSTRAINT DIAGRAM_ANIMPROCED FOREIGN KEY (ANIMAISPROCEDENCIA) REFERENCES PROCEDENCIA (ID) ON DELETE NO ACTION ON UPDATE CASCADE;
ALTER TABLE DIAGRAM ADD CONSTRAINT FKDIAGRAMAREACONHECIMENTO FOREIGN KEY (AREACONHECIMENTO) REFERENCES AREACONHECIMENTO (ID) ON DELETE NO ACTION ON UPDATE CASCADE;
ALTER TABLE DIAGRAM ADD CONSTRAINT FKDIAGRAM_RESPONSAVEL FOREIGN KEY (RESPONSAVEL) REFERENCES PESSOAS (ID) ON DELETE NO ACTION ON UPDATE CASCADE;
ALTER TABLE DIAGRAMANALGESIA ADD CONSTRAINT FKDIAGRAMANALG_ANALG2 FOREIGN KEY (ANALGESIA) REFERENCES FARMACOS (ID) ON DELETE NO ACTION ON UPDATE CASCADE;
ALTER TABLE DIAGRAMANALGESIA ADD CONSTRAINT FKDIAGRAMRELANAG_DIAGRAM2 FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE NO ACTION ON UPDATE CASCADE;
ALTER TABLE DIAGRAMANALGESICOS ADD CONSTRAINT FKDIAGRAMANALG_ANALG FOREIGN KEY (ANALGESICO) REFERENCES FARMACOS (ID) ON DELETE NO ACTION ON UPDATE CASCADE;
ALTER TABLE DIAGRAMANALGESICOS ADD CONSTRAINT FKDIAGRAMRELANAG_DIAGRAM FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE NO ACTION ON UPDATE CASCADE;
ALTER TABLE DIAGRAMANESTESICOS ADD CONSTRAINT FKDIAGRAMANESTESICOS_ANESTESICO FOREIGN KEY (ANESTESICO) REFERENCES FARMACOS (ID) ON DELETE NO ACTION ON UPDATE CASCADE;
ALTER TABLE DIAGRAMANESTESICOS ADD CONSTRAINT FKDIAGRAMANESTESICO_DIAGRAM FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE NO ACTION ON UPDATE CASCADE;
ALTER TABLE DIAGRAMCOLABORADORES ADD CONSTRAINT FKDIAGCOL_COLABORADOR FOREIGN KEY (COLABORADOR) REFERENCES PESSOAS (ID) ON DELETE NO ACTION ON UPDATE CASCADE;
ALTER TABLE DIAGRAMCOLABORADORES ADD CONSTRAINT FKDIAGCOL_DIAGRAM FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE NO ACTION ON UPDATE CASCADE;
ALTER TABLE DIAGRAMESPECIES ADD CONSTRAINT FKDIAGRAMESPECIES_DIAGRAM FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE NO ACTION ON UPDATE CASCADE;
ALTER TABLE DIAGRAMESPECIES ADD CONSTRAINT FKDIAGRAMESPECIES_ESPECIE FOREIGN KEY (ESPECIE) REFERENCES ESPECIES (ID) ON DELETE NO ACTION ON UPDATE CASCADE;
ALTER TABLE DIAGRAMEXPOSICAO ADD CONSTRAINT FKDIAGRAMEXP_EXP FOREIGN KEY (EXPOSICAO) REFERENCES FARMACOS (ID) ON DELETE NO ACTION ON UPDATE CASCADE;
ALTER TABLE DIAGRAMEXPOSICAO ADD CONSTRAINT FKDIAGRAMRELEXPOSICAO_DIAGRAM2 FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE NO ACTION ON UPDATE CASCADE;
ALTER TABLE DIAGRAMRELMUSC ADD CONSTRAINT FKDIAGRAMRELMUSC_DIAGRAM FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE NO ACTION ON UPDATE CASCADE;
ALTER TABLE DIAGRAMRELMUSC ADD CONSTRAINT FKDIAGRAMRELMUSC_RELMUSC FOREIGN KEY (RELMUSC) REFERENCES FARMACOS (ID) ON DELETE NO ACTION ON UPDATE CASCADE;
ALTER TABLE EUTHANASIA ADD FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE EXPERIMENT ADD FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE EXPERIMENTAL_UNIT ADD FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE GRUPO ADD FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE MEASUREMENT ADD FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE NUISANCE_VARIABLE ADD FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE OBJECT ADD CONSTRAINT FKOBJECT_DIAGRAM FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE OBJECT ADD CONSTRAINT FKOBJECT_TYPEOBJECT FOREIGN KEY (TYPEOBJECT) REFERENCES TYPEOBJECT (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE OTHER_INTERVENTION ADD FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE OUTCOME_MEASURE ADD FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE PATHOGEN_INFECTION ADD FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE PESSOAS ADD CONSTRAINT FKPESSOASINSTITUICAO FOREIGN KEY (INSTITUICAO) REFERENCES INSTITUICAO (ID) ON DELETE NO ACTION ON UPDATE CASCADE;
ALTER TABLE PHARMACOLOGICAL_INTERVENTION ADD FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE PHARMACOLOGICAL_INTERVENTION ADD FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE RELATIONSHIP ADD CONSTRAINT FKRELAT_DIAGRAM FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE RELATIONSHIP ADD CONSTRAINT FKRELAT_OBJECT FOREIGN KEY (OBJECT) REFERENCES OBJECT (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE REPEATED_MEASUREMENT ADD FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE SURGICAL_INTERVENTION ADD FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE VARIABLE_CATEGORY ADD FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE VARIABLE_OF_INTEREST ADD FOREIGN KEY (DIAGRAM) REFERENCES DIAGRAM (ID) ON DELETE CASCADE ON UPDATE CASCADE;


/******************************************************************************/
/***                                Triggers                                ***/
/******************************************************************************/


SET TERM ^ ;



/******************************************************************************/
/***                          Triggers for tables                           ***/
/******************************************************************************/



/* Trigger: TRIDAREACONHECIMENTO */
CREATE TRIGGER TRIDAREACONHECIMENTO FOR AREACONHECIMENTO
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.Id is null)
    then new.Id = gen_id(GIdAreaConhecimento,1);
  while (exists (select A.Id from AreaConhecimento A
                 where A.Id = new.Id)) do
  begin
    new.Id = gen_id(GIdAreaConhecimento,1);
  end
end
^


/* Trigger: TRIDCURSOS */
CREATE TRIGGER TRIDCURSOS FOR CURSOS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.Id is null)
    then new.Id = gen_id(GIdCursos,1);
  while (exists (select A.Id from Cursos A
                 where A.Id = new.Id)) do
  begin
    new.Id = gen_id(GIdCursos,1);
  end
end
^


/* Trigger: TRIDDIAGRAM */
CREATE TRIGGER TRIDDIAGRAM FOR DIAGRAM
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.Id is null)
    then new.Id = gen_id(GIdDiagram,1);
  while (exists (select A.Id from diagram A
                 where A.Id = new.Id)) do
  begin
    new.Id = gen_id(GIdDiagram,1);
  end
end
^


/* Trigger: TRIDESPECIES */
CREATE TRIGGER TRIDESPECIES FOR ESPECIES
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.Id is null)
    then new.Id = gen_id(GIdeSpecies,1);
  while (exists (select A.Id from eSpecies A
                 where A.Id = new.Id)) do
  begin
    new.Id = gen_id(GIdeSpecies,1);
  end
end
^


/* Trigger: TRIDFARMACOS */
CREATE TRIGGER TRIDFARMACOS FOR FARMACOS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.Id is null)
    then new.Id = gen_id(GIdFarmacos,1);
  while (exists (select A.Id from farmacos A
                 where A.Id = new.Id)) do
  begin
    new.Id = gen_id(GIdFarmacos,1);
  end
end
^


/* Trigger: TRIDPESSOAS */
CREATE TRIGGER TRIDPESSOAS FOR PESSOAS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.Id is null)
    then new.Id = gen_id(GIdPessoas,1);
  while (exists (select A.Id from Pessoas A
                 where A.Id = new.Id)) do
  begin
    new.Id = gen_id(GIdPessoas,1);
  end
end
^


/* Trigger: TRIDPROCEDENCIA */
CREATE TRIGGER TRIDPROCEDENCIA FOR PROCEDENCIA
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.Id is null)
    then new.Id = gen_id(GIdProcedencia,1);
  while (exists (select A.Id from Procedencia A
                 where A.Id = new.Id)) do
  begin
    new.Id = gen_id(GIdProcedencia,1);
  end
end
^


SET TERM ; ^

